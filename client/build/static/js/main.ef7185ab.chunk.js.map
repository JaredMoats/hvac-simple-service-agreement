{"version":3,"sources":["components/auth/Register.js","components/auth/Login.js","components/Navbar.js","components/Dashboard.js","App.js","index.js"],"names":["Register","_ref","storeToken","getToken","setActiveUser","_useState","useState","firstName","lastName","email","companyName","password","password2","role","selectedOption","_useState2","Object","slicedToArray","formData","setFormData","_useState3","toDashboard","_useState4","dashboard","setDashboardStatus","onChange","event","_objectSpread2","objectSpread","defineProperty","target","name","value","onSubmit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","productionPost","productionGet","config","body","res","token","headers","wrap","_context2","prev","next","preventDefault","alert","Content-Type","JSON","stringify","console","log","axios","post","sent","data","x-auth-token","setTimeout","_callee","employee","_context","get","stop","t0","response","_x","apply","this","arguments","react_default","createElement","react_router","to","react","className","style","fontSize","react_router_dom","type","placeholder","required","checked","Login","h2","message","Navbar","aria-label","Dashboard","activeUser","components_Navbar","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tokenStored","localStorage","setItem","setState","getItem","userObject","_this2","exact","path","render","props","auth_Register","auth_Login","components_Dashboard","Component","ReactDOM","src_App","document","getElementById"],"mappings":"+RA0KeA,EAtKE,SAAAC,GAA6C,IAA1CC,EAA0CD,EAA1CC,WAAYC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,cAAoBC,EAE1BC,mBAAS,CACrCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,KAAM,GACNC,eAAgB,KAVsCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAX,EAAA,GAEnDa,EAFmDH,EAAA,GAEzCI,EAFyCJ,EAAA,GAAAK,EAalBd,mBAAS,CAC7Ce,aAAa,IAdyCC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAanDG,EAbmDD,EAAA,GAaxCE,EAbwCF,EAAA,GAkBtDf,EAQCW,EARDX,UACAC,EAOCU,EAPDV,SACAC,EAMCS,EANDT,MACAC,EAKCQ,EALDR,YACAC,EAICO,EAJDP,SACAC,EAGCM,EAHDN,UACAC,EAECK,EAFDL,KACAC,EACCI,EADDJ,eAICO,EACAE,EADAF,YAWCI,EAAW,SAAAC,GAAS,IAAAC,EACtBR,EAAYH,OAAAY,EAAA,EAAAZ,CAAA,GAAKE,GAANS,EAAA,GAAAX,OAAAa,EAAA,EAAAb,CAAAW,EAAiBD,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,OAAlDhB,OAAAa,EAAA,EAAAb,CAAAW,EAAA,iBAAyED,EAAMI,OAAOE,OAAtFL,MAGTM,EAAQ,eAAAC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAC,EAAAC,KAAG,SAAAC,EAAMb,GAAN,IAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAC,EAAAU,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbxB,EAAMyB,iBAEAX,EAAiB,iBAGjBC,EAAgB,oBAEnB9B,IAAaC,EARH,CAAAoC,EAAAE,KAAA,QASTE,MAAM,0BATGJ,EAAAE,KAAA,uBAYHR,EAAS,CACXI,QAAS,CACLO,eAAgB,qBAIlBV,EAAOW,KAAKC,UAAU,CAAEhD,YAAWC,WAAUE,cAAaD,QAAOE,WAAUE,SACjF2C,QAAQC,IAAI,mBAAqBd,GAnBxBK,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAsBaQ,IAAMC,KAAKnB,EAAgBG,EAAMD,GAtB9C,QAsBCE,EAtBDI,EAAAY,KAuBL1D,EAAW0C,EAAIiB,KAAKhB,OAGdA,EAAQ1C,IACR2C,EAAU,CACZgB,eAAgBjB,GAGpBW,QAAQC,IAAI,+BACZD,QAAQC,IAAI,gBAAkBpC,GAE9B0C,WAAU/C,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAC,EAAAC,KAAC,SAAA0B,IAAA,IAAAC,EAAA,OAAA7B,EAAAC,EAAAU,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACPM,QAAQC,IAAI,iCADLS,EAAAhB,KAAA,EAEgBQ,IAAMS,IAAI1B,EAAe,CAAEK,QAASA,IAFpD,OAEDmB,EAFCC,EAAAN,KAGPJ,QAAQC,IAAI,gBACZrD,EAAc6D,GACdzC,EAAmB,CAAEH,aAAa,IAL3B,wBAAA6C,EAAAE,SAAAJ,MAMR,KAxCEhB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,UA0CLQ,QAAQC,IAAIT,EAAAqB,GAAMC,SAAST,MA1CtB,yBAAAb,EAAAoB,SAAA7B,EAAA,mBAAH,gBAAAgC,GAAA,OAAArC,EAAAsC,MAAAC,KAAAC,YAAA,GA+Cd,OAAIrD,EAsEIsD,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CAAUC,GAAG,eApEbH,EAAAtC,EAAAuC,cAACG,EAAA,SAAD,KACIJ,EAAAtC,EAAAuC,cAAA,MAAII,UAAU,iBAAiBC,MA9DhC,CACPC,SAAU,SA6DF,uCACAP,EAAAtC,EAAAuC,cAAA,MAAII,UAAU,iBAAiBC,MA3DhC,CACPC,SAAU,SA0DF,eAAwDP,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,UAAT,UACxDH,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,QACXL,EAAAtC,EAAAuC,cAAA,QAAM3C,SAAW,SAAAP,GAAK,OAAIO,EAASP,KAC/BiD,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,cACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,OAAOC,YAAY,aAAatD,KAAK,YAAYC,MAAOzB,EAAWkB,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAItJX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,aACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,OAAOC,YAAY,YAAYtD,KAAK,WAAWC,MAAOxB,EAAUiB,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAInJX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,gBACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,OAAOC,YAAY,eAAetD,KAAK,cAAcC,MAAOtB,EAAae,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAI5JX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,SACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,OAAOC,YAAY,QAAQtD,KAAK,QAAQC,MAAOvB,EAAOgB,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAIzIX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,YACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,WAAWC,YAAY,WAAWtD,KAAK,WAAWC,MAAOrB,EAAUc,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAItJX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,oBACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,WAAWC,YAAY,mBAAmBtD,KAAK,YAAYC,MAAOpB,EAAWa,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAIhKX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,aAEIL,EAAAtC,EAAAuC,cAAA,SAAOQ,KAAK,QAAQrD,KAAK,OAAOC,MAAM,aAAauD,QAA4B,eAAnBzE,EAAiCW,SAAW,SAAAC,GAAK,OAAID,EAASC,OAE9HiD,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,aAEIL,EAAAtC,EAAAuC,cAAA,SAAOQ,KAAK,QAAQrD,KAAK,OAAOC,MAAM,aAAauD,QAA4B,eAAnBzE,EAAiCW,SAAW,SAAAC,GAAK,OAAID,EAASC,OAE9HiD,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,SAEIL,EAAAtC,EAAAuC,cAAA,SAAOQ,KAAK,QAAQrD,KAAK,OAAOC,MAAM,SAASuD,QAA6B,WAAnBzE,EAA8BW,SAAW,SAAAC,GAAK,OAAID,EAASC,QAG5HiD,EAAAtC,EAAAuC,cAAA,SAAOQ,KAAK,SAASJ,UAAU,0BCjDxCQ,EAzGD,SAAAvF,GAA6C,IAA1CC,EAA0CD,EAA1CC,WAAYC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,cAAoBC,EACvBC,mBAAS,CACrCG,MAAO,GACPE,SAAU,KAHyCI,EAAAC,OAAAC,EAAA,EAAAD,CAAAX,EAAA,GAChDa,EADgDH,EAAA,GACtCI,EADsCJ,EAAA,GAAAK,EAMfd,mBAAS,CAC7Ce,aAAa,IAPsCC,EAAAN,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMhDG,EANgDD,EAAA,GAMrCE,EANqCF,EAAA,GAWnDb,EAEAS,EAFAT,MACAE,EACAO,EADAP,SAIAU,EACAE,EADAF,YAOEoE,EAAK,CACPP,SAAU,QAGRzD,EAAW,SAAAC,GACbP,EAAYH,OAAAY,EAAA,EAAAZ,CAAA,GAAKE,EAANF,OAAAa,EAAA,EAAAb,CAAA,GAAiBU,EAAMI,OAAOC,KAAOL,EAAMI,OAAOE,UAG3DC,EAAQ,eAAAC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAC,EAAAC,KAAG,SAAA0B,EAAMtC,GAAN,IAAAe,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAmB,EAAA,OAAA7B,EAAAC,EAAAU,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACbxB,EAAMyB,iBAMAV,EAAgB,oBAEhBC,EAAS,CACXI,QAAS,CACLO,eAAgB,qBAIlBV,EAAOW,KAAKC,UAAU,CAAE9C,QAAOE,aAfxBuD,EAAAjB,KAAA,EAAAiB,EAAAhB,KAAA,GAsBSQ,IAAMC,KAlBL,YAkB0BhB,EAAMD,GAtB1C,eAsBHE,EAtBGsB,EAAAN,KAuBT1D,EAAW0C,EAAIiB,KAAKhB,OAGdA,EAAQ1C,IACR2C,EAAU,CACZgB,eAAgBjB,GA5BXqB,EAAAhB,KAAA,GA+BcQ,IAAMS,IAAI1B,EAAe,CAAEK,QAASA,IA/BlD,QA+BHmB,EA/BGC,EAAAN,KAgCTxD,EAAc6D,GACdzC,EAAmB,CAAEH,aAAa,IAjCzB6C,EAAAhB,KAAA,iBAAAgB,EAAAjB,KAAA,GAAAiB,EAAAG,GAAAH,EAAA,SAoCTV,QAAQC,IAAIS,EAAAG,GAAMqB,SApCT,yBAAAxB,EAAAE,SAAAJ,EAAA,kBAAH,gBAAAO,GAAA,OAAArC,EAAAsC,MAAAC,KAAAC,YAAA,GAwCd,OAAIrD,EA6BIsD,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CAAUC,GAAG,eA3BbH,EAAAtC,EAAAuC,cAACG,EAAA,SAAD,KACIJ,EAAAtC,EAAAuC,cAAA,MAAII,UAAU,iBAAiBC,MAvDhC,CACPC,SAAU,SAsDF,uCACAP,EAAAtC,EAAAuC,cAAA,MAAII,UAAU,iBAAiBC,MAAQQ,GAAvC,YAAqDd,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,KAAT,aACrDH,EAAAtC,EAAAuC,cAAA,MAAII,UAAU,iBAAiBC,MAAQQ,GAAKd,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,cAAT,cAC5CH,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,QACXL,EAAAtC,EAAAuC,cAAA,QAAM3C,SAAW,SAAAP,GAAK,OAAIO,EAASP,KAC/BiD,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,SACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,OAAOC,YAAY,QAAQtD,KAAK,QAAQC,MAAOvB,EAAOgB,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAIzIX,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,SAAjB,YACAL,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,0BACXL,EAAAtC,EAAAuC,cAAA,SAAOI,UAAU,QAAQI,KAAK,WAAWC,YAAY,WAAWtD,KAAK,WAAWC,MAAOrB,EAAUc,SAAW,SAAAC,GAAK,OAAID,EAASC,IAAQ4D,UAAQ,MAItJX,EAAAtC,EAAAuC,cAAA,SAAOQ,KAAK,SAASJ,UAAU,0BC9ExCW,EAhBA,WACX,OACIhB,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,SAASnE,KAAK,aAAa+E,aAAW,mBACjDjB,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,gBACXL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,aACAL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,oBACAL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,gBACAL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,iBACAL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,oBACAL,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,CAAML,GAAG,aAAaE,UAAU,eAAhC,sBCODa,EAhBG,SAAA5F,GAA6CA,EAA1CG,cAA0C,IAA3B0F,EAA2B7F,EAA3B6F,WAA2B7F,EAAfE,SAE5C,OAAkB,OAAf2F,EAEKnB,EAAAtC,EAAAuC,cAAA,8CAIAD,EAAAtC,EAAAuC,cAACG,EAAA,SAAD,KACIJ,EAAAtC,EAAAuC,cAACmB,EAAD,MACApB,EAAAtC,EAAAuC,cAAA,2BAAoBpB,QAAQC,IAAI,gBAAkBqC,GAAlD,IAAiEA,EAAaA,EAAWjC,KAAKtD,UAAY,SAA1G,OC0CDyF,cAhDb,SAAAA,IAAc,IAAAC,EAAA,OAAAjF,OAAAkF,EAAA,EAAAlF,CAAAyD,KAAAuB,IACZC,EAAAjF,OAAAmF,EAAA,EAAAnF,CAAAyD,KAAAzD,OAAAoF,EAAA,EAAApF,CAAAgF,GAAAK,KAAA5B,QAEK6B,MAAQ,CACXR,WAAY,KACZS,aAAa,GALHN,0EASHpD,GACT2D,aAAaC,QAAQ,QAAS5D,GAC9B4B,KAAKiC,SAAS,CAAEH,aAAa,IAC7B/C,QAAQC,IAAI,mDAIZ,OAAO+C,aAAaG,QAAQ,+CAGhBC,GACZnC,KAAKiC,SAAS,CAAEZ,WAAYc,qCAGrB,IAAAC,EAAApC,KACP,OACEE,EAAAtC,EAAAuC,cAACO,EAAA,EAAD,KACER,EAAAtC,EAAAuC,cAAA,OAAKI,UAAU,aACbL,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CACEiC,OAAK,EAACC,KAAK,IACXC,OAAS,SAAAC,GAAK,OAAKtC,EAAAtC,EAAAuC,cAACsC,EAAD,CAAUhH,WAAa,SAAA2C,GAAK,OAAIgE,EAAK3G,WAAW2C,IAASzC,cAAgB,SAAAwG,GAAU,OAAIC,EAAKzG,cAAcwG,IAAczG,SAAW,kBAAM0G,EAAK1G,iBAGnKwE,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,KACEF,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CACEiC,OAAK,EAACC,KAAK,SACXC,OAAS,SAAAC,GAAK,OAAItC,EAAAtC,EAAAuC,cAACuC,EAAD,CAAOjH,WAAa,SAAA2C,GAAK,OAAIgE,EAAK3G,WAAW2C,IAASzC,cAAgB,SAAAwG,GAAU,OAAIC,EAAKzG,cAAcwG,IAAczG,SAAW,kBAAM0G,EAAK1G,iBAE/JwE,EAAAtC,EAAAuC,cAACC,EAAA,EAAD,CACEiC,OAAK,EAACC,KAAK,aACXC,OAAS,SAAAC,GAAK,OAAItC,EAAAtC,EAAAuC,cAACwC,EAAD,CAAWtB,WAAae,EAAKP,MAAMR,0BAxCjDuB,aCFlBC,IAASN,OAAOrC,EAAAtC,EAAAuC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ef7185ab.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Register = ({ storeToken, getToken, setActiveUser }) => {\n\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        companyName: \"\",\n        password: \"\",\n        password2: \"\",\n        role: \"\",\n        selectedOption: \"\"\n    });\n\n    const [dashboard, setDashboardStatus] = useState({\n        toDashboard: false\n    });\n\n    const { \n        firstName,\n        lastName,\n        email,\n        companyName,\n        password,\n        password2,\n        role,\n        selectedOption\n     } = formData;\n\n     const {\n         toDashboard\n     } = dashboard;\n\n    const h1 = {\n        fontSize: \"40px\"\n    }\n\n    const h2 = {\n        fontSize: \"20px\"\n    }\n\n    const onChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value, selectedOption: event.target.value });\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n        const localPost = \"http://localhost:5000/api/employees\";\n        const productionPost = \"/api/employees\";\n\n        const localGet = \"http://localhost:5000/api/employees/me\";\n        const productionGet = \"/api/employees/me\";\n\n        if(password !== password2) {\n            alert(\"Passwords do not match\");\n        } else {\n            //post request to create new employee\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n\n            const body = JSON.stringify({ firstName, lastName, companyName, email, password, role });\n            console.log(\"JSON form data: \" + body);\n\n            try {\n                const res = await axios.post(productionPost, body, config);\n                storeToken(res.data.token);\n\n                /* Get active user, store in state. */\n                const token = getToken();\n                const headers = {\n                    \"x-auth-token\": token\n                }\n\n                console.log(\"Token set in headers object\");\n                console.log(\"toDashboard: \" + toDashboard);\n\n                setTimeout(async () => {\n                    console.log(\"setTimeout contents triggered\");\n                    const employee = await axios.get(productionGet, { headers: headers });\n                    console.log(\"Got employee\");\n                    setActiveUser(employee);\n                    setDashboardStatus({ toDashboard: true });\n                }, 10000);\n            } catch (error) {\n                console.log(error.response.data);\n            }\n        }\n    }\n\n    if(!toDashboard) {\n        return (\n            <Fragment>\n                <h1 className=\"has-text-black\" style={ h1 }>Welcome to Simple Service Agreement</h1>\n                <h2 className=\"has-text-black\" style={ h2 }>Register or <Link to=\"/login\">Login</Link></h2>\n                <div className=\"card\">\n                    <form onSubmit={ event => onSubmit(event) }>\n                        <div className=\"field\">\n                            <label className=\"label\">First Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" value={firstName} onChange={ event => onChange(event)} required />\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Last Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" value={lastName} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Company Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Company Name\" name=\"companyName\" value={companyName} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Email</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Email\" name=\"email\" value={email} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Confirm Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Confirm Password\" name=\"password2\" value={password2} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"radio\">\n                                Technician\n                                <input type=\"radio\" name=\"role\" value=\"technician\" checked={selectedOption === \"technician\"} onChange={ event => onChange(event) }/>\n                            </label>\n                            <label className=\"radio\">\n                                Dispatcher\n                                <input type=\"radio\" name=\"role\" value=\"dispatcher\" checked={selectedOption === \"dispatcher\"} onChange={ event => onChange(event) }/>\n                            </label>\n                            <label className=\"radio\">\n                                Dealer\n                                <input type=\"radio\" name=\"role\" value=\"dealer\" checked={ selectedOption === \"dealer\" } onChange={ event => onChange(event) }/>\n                            </label>\n                        </div>\n                        <input type=\"submit\" className=\"button is-success\" />\n                    </form>\n                </div>\n            </Fragment>\n        );\n    } else {\n        return(\n            <Redirect to=\"/dashboard\" />\n        );\n    }\n}\n\nexport default Register;\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = ({ storeToken, getToken, setActiveUser }) => {\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const [dashboard, setDashboardStatus] = useState({\n        toDashboard: false\n    });\n\n    const {\n        email,\n        password\n    } = formData;\n\n    const {\n        toDashboard\n    } = dashboard;\n\n    const h1 = {\n        fontSize: \"40px\"\n    }\n\n    const h2 = {\n        fontSize: \"20px\"\n    }\n\n    const onChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value});\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        const localPost = \"http://localhost:5000/api/auth\";\n        const productionPost = \"/api/auth\";\n\n        const localGet = \"http://localhost:5000/api/employees/me\";\n        const productionGet = \"/api/employees/me\";\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        const body = JSON.stringify({ email, password });\n\n        try {\n            /*\n                Will get token upon successful login. \n                Call function to store it locally\n             */\n            const res = await axios.post(productionPost, body, config);\n            storeToken(res.data.token);\n\n            /* Get active user, store in state. */\n            const token = getToken();\n            const headers = {\n                \"x-auth-token\": token\n            }\n\n            const employee = await axios.get(productionGet, { headers: headers });\n            setActiveUser(employee);\n            setDashboardStatus({ toDashboard: true });\n\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    if(!toDashboard) {\n        return (\n            <Fragment>\n                <h1 className=\"has-text-black\" style={ h1 }>Welcome to Simple Service Agreement</h1>\n                <h2 className=\"has-text-black\" style={ h2 }>Login or <Link to=\"/\">Register</Link></h2>\n                <h2 className=\"has-text-black\" style={ h2 }><Link to=\"/dashboard\">Dashboard</Link></h2>\n                <div className=\"card\">\n                    <form onSubmit={ event => onSubmit(event) }>\n                        <div className=\"field\">\n                            <label className=\"label\">Email</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Email\" name=\"email\" value={email} onChange={ event => onChange(event)} required />\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"button is-success\" />\n                    </form>\n                </div>\n            </Fragment>\n        )\n    } else {\n        return(\n            <Redirect to=\"/dashboard\" />\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-start\">\n                <Link to=\"/dashboard\" className=\"navbar-item\">Dashboard</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">New Service Call</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">New Customer</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">All Customers</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">Look Up Customer</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">All Technicians</Link>\n            </div>\n        </nav>\n        \n    )\n}\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport Navbar from \"./Navbar\";\n\nconst Dashboard = ({ setActiveUser, activeUser, getToken }) => {\n\n    if(activeUser === null) {\n        return(\n            <h1>You must be logged in to do that</h1>\n        )\n    } else {\n        return (\n            <Fragment>\n                <Navbar />\n                <h1>Welcome back, { console.log(\"Active user: \" + activeUser) } {activeUser ? activeUser.data.firstName : \"<name>\"}.</h1>\n            </Fragment>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/Dashboard\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      activeUser: null,\n      tokenStored: false\n    }\n  }\n\n  storeToken(token) {\n    localStorage.setItem(\"token\", token);\n    this.setState({ tokenStored: true });\n    console.log(\"Token stored\");\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  setActiveUser(userObject) {\n    this.setState({ activeUser: userObject });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Route \n            exact path=\"/\" \n            render={ props =>  <Register storeToken={ token => this.storeToken(token) } setActiveUser={ userObject => this.setActiveUser(userObject) } getToken={ () => this.getToken() } />} \n          \n          />\n          <Switch>\n            <Route \n              exact path=\"/login\" \n              render={ props => <Login storeToken={ token => this.storeToken(token) } setActiveUser={ userObject => this.setActiveUser(userObject) } getToken={ () => this.getToken() } /> } \n            />\n            <Route \n              exact path=\"/dashboard\"\n              render={ props => <Dashboard activeUser={ this.state.activeUser } /> }\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}