{"version":3,"sources":["components/auth/Register.js","components/auth/Login.js","components/Navbar.js","components/Dashboard.js","components/Customer/CreateCustomer.js","components/Customer/AllCustomers.js","App.js","index.js"],"names":["Register","_ref","storeToken","getToken","_useState","setActiveUser","useState","firstName","lastName","email","companyName","password","password2","role","selectedOption","_useState2","Object","slicedToArray","formData","setFormData","_useState3","toLogin","_useState4","login","setLoginStatus","onChange","event","_objectSpread2","objectSpread","defineProperty","target","name","value","onSubmit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","config","body","res","wrap","_context","prev","next","preventDefault","alert","headers","Content-Type","JSON","stringify","console","log","axios","post","sent","data","token","t0","response","stop","_x","apply","this","arguments","react_default","createElement","react_router","to","react","className","style","fontSize","react_router_dom","type","placeholder","required","checked","Login","toDashboard","dashboard","setDashboardStatus","h2","employee","x-auth-token","get","message","Navbar","aria-label","Dashboard","activeUser","components_Navbar","CreateCustomer","streetAddress","state","zipCode","homePhone","mobilePhone","workPhone","canText","canEmail","inCityLimits","notes","abrupt","AllCustomers","customersData","customers","setCustomers","useEffect","_fetchCustomers","_customers","error","fetchCustomers","map","customer","index","key","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tokenStored","localStorage","setItem","setState","getItem","userObject","_this2","exact","path","render","props","auth_Register","auth_Login","components_Dashboard","ifActiveUser","Customer_CreateCustomer","Customer_AllCustomers","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af847540.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Register = ({ storeToken, getToken, setActiveUser }) => {\n\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        companyName: \"\",\n        password: \"\",\n        password2: \"\",\n        role: \"\",\n        selectedOption: \"\"\n    });\n\n    const [login, setLoginStatus] = useState({\n        toLogin: false\n    });\n\n    const { \n        firstName,\n        lastName,\n        email,\n        companyName,\n        password,\n        password2,\n        role,\n        selectedOption\n     } = formData;\n\n     const {\n         toLogin\n     } = login;\n\n    const h1 = {\n        fontSize: \"40px\"\n    }\n\n    const h2 = {\n        fontSize: \"20px\"\n    }\n\n    const onChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value, selectedOption: event.target.value });\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== password2) {\n            alert(\"Passwords do not match\");\n        } else {\n            //post request to create new employee\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n\n            const body = JSON.stringify({ firstName, lastName, companyName, email, password, role });\n            console.log(\"JSON form data: \" + body);\n\n            try {\n                const res = await axios.post(\"/api/employees\", body, config);\n                storeToken(res.data.token);\n\n                /* Get active user, store in state. */\n                const token = getToken();\n                const headers = {\n                    \"x-auth-token\": token\n                }\n\n                console.log(\"Token set in headers object\");\n                console.log(\"toDashboard: \" + toLogin);\n                \n                setLoginStatus({ toLogin: true });\n            } catch (error) {\n                console.log(error.response.data);\n            }\n        }\n    }\n\n    if(!toLogin) {\n        return (\n            <Fragment>\n                <h1 className=\"has-text-black\" style={ h1 }>Welcome to Simple Service Agreement</h1>\n                <h2 className=\"has-text-black\" style={ h2 }>Register or <Link to=\"/login\">Login</Link></h2>\n                <div className=\"card\">\n                    <form onSubmit={ event => onSubmit(event) }>\n                        <div className=\"field\">\n                            <label className=\"label\">First Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" value={firstName} onChange={ event => onChange(event)} required />\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Last Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" value={lastName} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Company Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Company Name\" name=\"companyName\" value={companyName} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Email</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Email\" name=\"email\" value={email} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Confirm Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Confirm Password\" name=\"password2\" value={password2} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"radio\">\n                                Technician\n                                <input type=\"radio\" name=\"role\" value=\"technician\" checked={selectedOption === \"technician\"} onChange={ event => onChange(event) }/>\n                            </label>\n                            <label className=\"radio\">\n                                Dispatcher\n                                <input type=\"radio\" name=\"role\" value=\"dispatcher\" checked={selectedOption === \"dispatcher\"} onChange={ event => onChange(event) }/>\n                            </label>\n                            <label className=\"radio\">\n                                Dealer\n                                <input type=\"radio\" name=\"role\" value=\"dealer\" checked={ selectedOption === \"dealer\" } onChange={ event => onChange(event) }/>\n                            </label>\n                        </div>\n                        <input type=\"submit\" className=\"button is-success\" />\n                    </form>\n                </div>\n            </Fragment>\n        );\n    } else {\n        return(\n            <Redirect to=\"/login\" />\n        );\n    }\n}\n\nexport default Register;\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = ({ storeToken, getToken, setActiveUser }) => {\n    const [formData, setFormData] = useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const [dashboard, setDashboardStatus] = useState({\n        toDashboard: false\n    });\n\n    const {\n        email,\n        password\n    } = formData;\n\n    const {\n        toDashboard\n    } = dashboard;\n\n    const h1 = {\n        fontSize: \"40px\"\n    }\n\n    const h2 = {\n        fontSize: \"20px\"\n    }\n\n    const onChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value});\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        const localPost = \"http://localhost:5000/api/auth\";\n        const productionPost = \"/api/auth\";\n\n        const localGet = \"http://localhost:5000/api/employees/me\";\n        const productionGet = \"/api/employees/me\";\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }\n\n        const body = JSON.stringify({ email, password });\n\n        try {\n            /*\n                Will get token upon successful login. \n                Call function to store it locally\n             */\n            const res = await axios.post(\"/api/auth\", body, config);\n            storeToken(res.data.token);\n\n            /* Get active user, store in state. */\n            const token = getToken();\n            const headers = {\n                \"x-auth-token\": token\n            }\n\n            const employee = await axios.get(\"/api/employees/me\", { headers: headers });\n            setActiveUser(employee);\n            setDashboardStatus({ toDashboard: true });\n\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    if(!toDashboard) {\n        return (\n            <Fragment>\n                <h1 className=\"has-text-black\" style={ h1 }>Welcome to Simple Service Agreement</h1>\n                <h2 className=\"has-text-black\" style={ h2 }>Login or <Link to=\"/\">Register</Link></h2>\n                <h2 className=\"has-text-black\" style={ h2 }><Link to=\"/dashboard\">Dashboard</Link></h2>\n                <div className=\"card\">\n                    <form onSubmit={ event => onSubmit(event) }>\n                        <div className=\"field\">\n                            <label className=\"label\">Email</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Email\" name=\"email\" value={email} onChange={ event => onChange(event)} required />\n                                \n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Password</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={ event => onChange(event)} required/>\n                                \n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"button is-success\" />\n                    </form>\n                </div>\n            </Fragment>\n        )\n    } else {\n        return(\n            <Redirect to=\"/dashboard\" />\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-start\">\n                <Link to=\"/dashboard\" className=\"navbar-item\">Dashboard</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">New Service Call</Link>\n                <Link to=\"/create-customer\" className=\"navbar-item\">New Customer</Link>\n                <Link to=\"/all-customers\" className=\"navbar-item\">All Customers</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">Look Up Customer</Link>\n                <Link to=\"/dashboard\" className=\"navbar-item\">All Technicians</Link>\n            </div>\n        </nav>\n        \n    )\n}\n\nexport default Navbar;\n","import React, { Fragment } from 'react';\nimport Navbar from \"./Navbar\";\n\nconst Dashboard = ({ setActiveUser, activeUser, getToken }) => {\n\n   if(!activeUser) {\n        return(\n            <h1>You must be logged in to do that</h1>\n        )\n    } else {\n        return (\n            <Fragment>\n                <Navbar />\n                <h1>Welcome back, { console.log(\"Active user: \" + activeUser) } {activeUser ? activeUser.data.firstName : \"<name>\"}.</h1>\n            </Fragment>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React, { Fragment, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Navbar from \"../Navbar\";\n\nconst CreateCustomer = ({ activeUser, getToken }) => {\n    const [formData, setFormData] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        streetAddress: \"\",\n        state: \"\",\n        zipCode: \"\",\n        homePhone: \"\",\n        mobilePhone: \"\",\n        workPhone: \"\",\n        canText: false,\n        canEmail: false,\n        inCityLimits: true,\n        notes: \"\"\n    });\n\n    const [dashboard, setDashboardStatus] = useState({\n        toDashboard: false\n    });\n\n    const {\n        toDashboard\n    } = dashboard;\n\n    const { \n        firstName,\n        lastName,\n        email,\n        streetAddress,\n        state,\n        zipCode,\n        homePhone,\n        mobilePhone,\n        workPhone,\n        canText,\n        canEmail,\n        inCityLimits,\n        notes\n    } = formData;\n\n    const onChange = event => {\n        setFormData({ ...formData, [event.target.name]: event.target.value});\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n\n        const body = JSON.stringify({ \n            firstName,\n            lastName,\n            email,\n            streetAddress,\n            state,\n            zipCode,\n            homePhone,\n            mobilePhone,\n            workPhone,\n            canText,\n            canEmail,\n            inCityLimits,\n            notes \n        });\n\n        try {\n            /* Get stored token to send in post request */\n            const token = getToken();\n\n            /* If no token, return error message */\n            if(!token) {\n                console.log(\"There is no token\");\n                return \"There is no token\";\n            }\n\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-auth-token\": token\n                }\n            }\n\n            const res = await axios.post(\"/api/customers\", body, config);\n            setDashboardStatus({ toDashboard: true });\n\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    if(!activeUser) {\n        return(\n            <h1>You must be logged in to do that</h1>\n        )\n    } \n    \n    if(!toDashboard) {\n        return (\n            <Fragment>\n                <Navbar />\n                <div className=\"card\">\n                    <h1>Create customer</h1>\n                    <form onSubmit={ event => onSubmit(event) }>\n                        <div className=\"field\">\n                            <label className=\"label\">First Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"First Name\" name=\"firstName\" value={firstName} onChange={ event => onChange(event)} required />\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Last Name</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Last Name\" name=\"lastName\" value={lastName} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Email</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Street Address</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Street Address\" name=\"streetAddress\" value={streetAddress} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">State</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"State\" name=\"state\" value={state} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Zip Code</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Zip Code\" name=\"zipCode\" value={zipCode} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Home Phone</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Home Phone\" name=\"homePhone\" value={homePhone} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Mobile Phone</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Mobile Phone\" name=\"mobilePhone\" value={mobilePhone} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Work Phone</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Work Phone\" name=\"workPhone\" value={workPhone} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Notes</label>\n                            <div className=\"control has-icons-left\">\n                                <input className=\"input\" type=\"text\" placeholder=\"Notes\" name=\"notes\" value={notes} onChange={ event => onChange(event)} required/>\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"button is-success\" />\n                    </form>\n                </div>\n            </Fragment>\n        )\n    } else {\n        return (\n            <Redirect to=\"/dashboard\"/>\n        )\n    }\n}\n\nexport default CreateCustomer;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport Navbar from \"../Navbar\";\nimport axios from \"axios\";\n\n\nconst AllCustomers = ({ getToken, activeUser }) => {\n\n    const [customers, setCustomers] = useState({\n        customersData: null\n    });\n\n    const {\n        customersData\n    } = customers;\n\n    useEffect(() => {\n        async function fetchCustomers() {\n            /* \n                When the component mounts, get all customers\n                and store them in state\n            */\n            try {\n                const token = getToken();\n\n                if(!token) {\n                    console.log(\"From AllCustomers: No token\");\n                    return null;\n                }\n\n                const headers = {\n                    \"x-auth-token\": token\n                }\n\n                const customers = await axios.get(\"/api/customers\", { headers: headers });\n\n                if(!customers) {\n                    console.log(\"From AllCustomers: Found no customers\");\n                    return null;\n                }\n\n                setCustomers({ ...customers, customersData: customers });\n\n            } catch (error) {\n                console.log(\"Error in the AllCustomers component\");\n                console.error(error.message);\n            }\n        }\n      fetchCustomers();\n    }, []);\n\n    if(!activeUser) {\n        return(\n            <h1>You must be logged in to do that</h1>\n        )\n    }\n\n    if(!customersData) {\n        return(\n            <Fragment>\n                <Navbar />\n                <h1>No customers found</h1>\n            </Fragment>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n            <h1>Customers: </h1>\n            { \n                customersData.data.map((customer, index) => (\n                    <p key={index}>Customer: { customer.firstName } { customer.lastName } </p>\n                ))\n            }\n        </Fragment>\n    )\n}\n\nexport default AllCustomers;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/Dashboard\";\nimport CreateCustomer from \"./components/Customer/CreateCustomer\";\nimport AllCustomers from \"./components/Customer/AllCustomers\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      activeUser: null,\n      tokenStored: false\n    }\n  }\n\n  storeToken(token) {\n    localStorage.setItem(\"token\", token);\n    this.setState({ tokenStored: true });\n    console.log(\"Token stored\");\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  setActiveUser(userObject) {\n    this.setState({ activeUser: userObject });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Route \n            exact path=\"/\" \n            render={ props =>  <Register storeToken={ token => this.storeToken(token) } setActiveUser={ userObject => this.setActiveUser(userObject) } getToken={ () => this.getToken() } />} \n          \n          />\n          <Switch>\n            <Route \n              exact path=\"/login\" \n              render={ props => <Login storeToken={ token => this.storeToken(token) } setActiveUser={ userObject => this.setActiveUser(userObject) } getToken={ () => this.getToken() } /> } \n            />\n            <Route \n              exact path=\"/dashboard\"\n              render={ props => <Dashboard activeUser={ this.state.activeUser } ifActiveUser={ activeUser => this.ifActiveUser(activeUser) } /> }\n            />\n            <Route\n              exact path=\"/create-customer\"\n              render={ props => <CreateCustomer activeUser={ this.state.activeUser } getToken={ () => this.getToken() } /> }\n            />\n            <Route\n              exact path=\"/all-customers\"\n              render={ props => <AllCustomers activeUser={ this.state.activeUser } getToken={ () => this.getToken() } /> }\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}